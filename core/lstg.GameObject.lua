---@meta
--- LuaSTG Sub Documentation: Game Object
--------------------------------------------------------------------------------

--- Game Object Class

---@class lstg.Class
---
--- Game callback methods
---
--- `init` callback method. Called in `lstg.New()`.
---@field [1] fun(self: lstg.GameObject, ...: any)
---
--- `del` callback method. Called in `lstg.Del()` (or `lstg.BoundCheck()` if it leaves the bounds).
---@field [2] fun(self: lstg.GameObject)
---
--- `frame` callback method. Called in `lstg.ObjFrame()`.
---@field [3] fun(self: lstg.GameObject)
---
--- `render` callback method. Called in `lstg.ObjRender()`.
--- `lstg.DefaultRenderFunc()` should be used by default.
---@field [4] fun(self: lstg.GameObject)
---
--- `colli` callback method. Called in `lstg.CollisionCheck()`.
---@field [5] fun(self: lstg.GameObject, other: lstg.GameObject)
---
--- `kill` callback method. Called in `lstg.Kill()`.
---@field [6] fun(self: lstg.GameObject)
---
--- Class meta fields.
---
--- This property must be set to true if you want to instantiate this class with `lstg.New()`.
---@field is_class true
---
--- If set to true, the object created by `lstg.New()` is a `lstg.GameRenderObject` instead.
---@field [".render"] boolean
---
--- Determines engine optimized functions.
--- Set bit 4 (0x08) to optimize frame behavior (method in field [3] will not be called).
--- Set bit 5 (0x10) to optimize render behavior (method in field [4] will not be called).
--- If you want to optimize both, set it to 0x18.
---@field default_function lstg.ClassDefaultFunction

---@alias lstg.ClassDefaultFunction
---| 0  # (0x00) No engine function optimization
---| 8  # (0x08) Frame callback optimized by engine (user defined frame callback is not called)
---| 16 # (0x10) Render callback optimized by engine (user defined render callback is not called)
---| 24 # (0x18) Frame and render callbacks optimized by engine (user defined frame/render callbacks are not called)

--------------------------------------------------------------------------------

--- Instantiated Game Objects

---@alias lstg.GameObject.Status '"normal"' | '"del"' | '"kill"'

---@class lstg.GameObject.Internal : lightuserdata

---@class lstg.GameObject
---
--- Internal use fields
---
---@field [1] lstg.Class Object class, you should access this through `obj.class` instead.
---@field [2] integer Internal use index, do not access or modify.
---@field [3] lstg.GameObject.Internal Pointer to internal engine data. Do not access or modify.
---@field [4] lstg.ParticleSystem Instance of an internal engine class, do not access or modify.
---
--- Game object fields
---
--- Object status, if it's `"del"` or `"kill"` the object is about to be invalidated.
---@field status lstg.GameObject.Status
---
--- The game object's class.
---@field class lstg.Class
---
--- World mask, determines render, collision, and update behavior (see `lstg.SetWorldFlag()`).
---@field world integer
---
--- X position.
---@field x number
---
--- Y position.
---@field y number
---
--- Read only.  
--- The change in x position since the last frame.
---@field dx number
---
--- Read only.  
--- The change in y position since the last frame.
---@field dy number
---
--- Velocity on the x-axis.
---@field vx number
---
--- Velocity on the y-axis.
---@field vy number
---
--- Acceleration on the x-axis.
---@field ax number
---
--- Acceleration on the y-axis.
---@field ay number
---
--- Maximum speed on the x-axis.
---@field maxvx number
---
--- Maximum speed on the y-axis.
---@field maxvy number
---
--- Maximum directional speed.
---@field maxv number
---
--- Gravitational acceleration, always in the negative y direction.
---@field ag number
---
--- The angle of the velocity. Not recommended for use at very low speeds.
---@field _angle number
---
--- The magnitude of the velocity. Not recommended for use at very low speeds.
---@field _speed number
---
--- The object's group, used for collision detection.
--- > **Do not modify if iterating via `lstg.ObjList()` or in a collision callback.**
---@field group integer
---
--- Whether the object gets deleted when exiting the the area given in `lstg.SetBound()`.
---@field bound boolean
---
--- Determines if collision is enabled on this object.
---@field colli boolean
---
--- Determines if the collision area is a rectagle or an ellipse.
---@field rect boolean
---
--- Horizontal size of the collision area.
---@field a number
---
--- Vertical size of the collision area.
---@field b number
---
--- Object layer, determines render order  
--- > **Do not modify in render callback.**
---@field layer number
---
--- Horizontal render scale.
---@field hscale number
---
--- Vertical render scale.
---@field vscale number
---
--- Image rotation angle (degrees).
---@field rot number
---
--- Angle increment value, LuaSTG adds this value to `rot` each frame.  
--- Conflicts with `navi`, if you want to use `omiga` set `navi` to false.
---@field omiga number
---
--- Autoincrementing animation counter (if `img` is set to an animation resource).
---@field ani integer
---
--- Whether to render the object or not.
---@field hide boolean
---
--- Sets `rot` to the velocity angle.  
--- Conflicts with `omiga`, if you want to use `navi` set `omiga` to 0.
---@field navi boolean
---
--- The resource that gets rendered by the game object's default callback.  
--- When setting this value, LuaSTG will look up a resource from the image pool, animation pool,
--- and particle effects pool, in order of greatest to least priority, and apply them to the object.
---@field img string
---
--- Autoincrementing frame counter of the object.
---@field timer integer
---
--- Not recommended  
--- Calculate vx and vy based on the object's coordinates between the current and last frame.
---@field rmove boolean
---
--- Remaining pause time in frames.
--- If set to greater than 0, pauses the object's movement calculations, particle system, timer,
--- and animation update.
---@field pause integer
---
--- Determines if this object is affected by `lstg.SetSuperPause()`.
---@field nopause boolean

--- If the class's [".render"] == true, instantiates this kind of object instead.
--- This kind of object allows you to set the blend mode and color of the object's image,
--- which leads to more optimized calls to `lstg.DefaultRenderFunc()`.
---@class lstg.GameRenderObject: lstg.GameObject
---
--- The blend mode for the object.
---@field _blend lstg.BlendMode
---
--- The object's color.
---@field _color lstg.Color
---
--- The alpha component of the object's color.
---@field _a integer
---
--- The red component of the object's color.
---@field _r integer
---
--- The green component of the object's color.
---@field _g integer
---
--- The blue component of the object's color.
---@field _b integer
---
--- Read-only.  
--- The object's bound particle system.
---@field rc lstg.ParticleSystem
